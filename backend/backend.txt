1.
mkdir backend
cd backend
npm init -y
npm install cors express
npm install --save-dev \
  @types/cors \
  @types/express \
  @types/node \
  concurrently \
  nodemon \
  typescript
npx tsc --init # Skapar tsconfig.json
echo node_modules >> .gitignore
echo "*.js" >> .gitignore

2. touch index.ts

3. Följande NPM script (se build, dev och start under scripts) kan läggas in i package.json så att projektet kan köras med npm run dev:

{
  "name": "my-project",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "npx tsc",
    "dev": "concurrently \"nodemon index.js\" \"npx tsc --watch\"",
    "start": "node index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.15",
    "@types/node": "^18.11.18",
    "concurrently": "^7.6.0",
    "nodemon": "^2.0.20",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.18.2"
  }
}

4. Projekett går att bygga med npm run dev och sedan startas med npm start.


5. testar npm install pg

6. Proxy-konfiguration i next.config.ts i frontend
 import type { NextConfig } from 'next';

const nextConfig: NextConfig = {
	/* config options here */
	async rewrites() {
		return [
			{
				source: '/api/:path*',
				destination: 'https://localhost:3000/api/:path*',
			},
		];
	},
};

export default nextConfig;
